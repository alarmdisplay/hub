---
kind: pipeline
type: docker
name: compliance

trigger:
  branch:
    include:
      - develop
      - main

steps:
  - name: lint-server
    image: node:lts
    commands:
      - cd server
      - npm ci
      - npm run lint
  - name: lint-console
    image: node:lts
    commands:
      - cd console
      - npm ci
      - npm run lint
  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_hook
    when:
      status:
        - failure
      event:
        exclude:
          - pull_request

---
kind: pipeline
type: docker
name: testing-linux-amd64

platform:
  os: linux
  arch: amd64

trigger:
  branch:
    include:
      - develop
      - main

depends_on:
  - compliance

steps:
  - name: test-server-node-12
    image: node:12
    commands:
      - cd server
      - npm ci
      - npm test
  - name: test-server-node-14
    image: node:14
    commands:
      - cd server
      - npm ci
      - npm test
  - name: test-server-node-16
    image: node:16
    commands:
      - cd server
      - npm ci
      - npm test
  - name: docker-testimage
    pull: always
    image: plugins/docker:latest
    settings:
      repo: registry.abrain.dev:5000/alarmdisplay/hub
      registry: registry.abrain.dev:5000
      tags: testing-amd64
    environment:
      DOCKER_PASSWORD:
        from_secret: tmpregistry_password
      DOCKER_USERNAME:
        from_secret: tmpregistry_username
  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_hook
    when:
      status:
        - failure
      event:
        exclude:
          - pull_request
---
kind: pipeline
type: docker
name: docker-linux-amd64

platform:
  os: linux
  arch: amd64

trigger:
  branch:
    include:
      - develop
      - main

depends_on:
  - testing-linux-amd64

services:
  - name: mariadb
    image: mariadb
    environment:
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: yes
      MARIADB_DATABASE: hub
  - name: sut
    image: registry.abrain.dev:5000/alarmdisplay/hub:testing-amd64
    environment:
      MYSQL_URI: mysql://root:@mariadb:3306/hub

steps:
  - name: test-api
    image: node:16
    commands:
      - cd test-api
      - npm ci
      - SERVER_URL=sut:3030 npm start
  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_hook
    when:
      status:
        - failure
      event:
        exclude:
          - pull_request

image_pull_secrets:
  - dockerconfig
---
kind: pipeline
type: docker
name: testing-linux-armv7

platform:
  os: linux
  arch: arm

trigger:
  branch:
    include:
      - develop
      - main

depends_on:
  - compliance

steps:
  - name: test-server-node-12
    image: node:12
    commands:
      - cd server
      - npm ci
      - npm test
  - name: test-server-node-14
    image: node:14
    commands:
      - cd server
      - npm ci
      - npm test
  - name: test-server-node-16
    image: node:16
    commands:
      - cd server
      - npm ci
      - npm test
  - name: docker-testimage
    pull: always
    image: plugins/docker:latest
    settings:
      repo: registry.abrain.dev:5000/alarmdisplay/hub
      registry: registry.abrain.dev:5000
      tags: testing-armv7
    environment:
      DOCKER_PASSWORD:
        from_secret: tmpregistry_password
      DOCKER_USERNAME:
        from_secret: tmpregistry_username
  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_hook
    when:
      status:
        - failure
      event:
        exclude:
          - pull_request
---
kind: pipeline
type: docker
name: docker-linux-armv7

platform:
  os: linux
  arch: arm

trigger:
  branch:
    include:
      - develop
      - main

depends_on:
  - testing-linux-armv7

services:
  - name: mariadb
    image: mariadb
    environment:
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: yes
      MARIADB_DATABASE: hub
  - name: sut
    image: registry.abrain.dev:5000/alarmdisplay/hub:testing-armv7
    environment:
      MYSQL_URI: mysql://root:@mariadb:3306/hub

steps:
  - name: test-api
    image: node:16
    commands:
      - cd test-api
      - npm ci
      - SERVER_URL=sut:3030 npm start
  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_hook
    when:
      status:
        - failure
      event:
        exclude:
          - pull_request

image_pull_secrets:
  - dockerconfig
---
kind: signature
hmac: 4bf7b830c2f74c8d1936106ff2b6cdfb0d1bb6699c4f8b563295e0d771940c27

...
